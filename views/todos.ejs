<%- include('partials/header') -%>

    <h1>Todos</h1>
    <ul>
    <% todos.forEach( el => { %>
            <li class='todoItem' data-id='<%=el._id%>'>
                <span class='<%= el.completed === true ? 'completed' : 'not'%>'><%= el.todo %></span>
                <span class='del'> Delete </span>
            </li>
    <% }) %>    
    </ul>

    <h2><%= user.userName %> has <%= left %> things left to do.</h2>

    <form action="/todos/createTodo" method='POST'>
        <input type="text" placeholder="Enter Todo Item" name='todoItem'>
        <input type="submit">
    </form>

    <a href="/logout">Logout</a>

    <script src="js/main.js"></script>

<%- include('partials/footer') -%>



<!--
The code you provided is an EJS template code for displaying a todo list. It includes partials for the header and footer and contains HTML markup for displaying the todo list, adding new todos, and performing actions such as deleting todos.

Here's a breakdown of the code:

ejs

<%- include('partials/header') -%>

This line includes the contents of the partials/header.ejs file.

ejs

<h1>Todos</h1>
<ul>
<% todos.forEach( el => { %>
    <li class='todoItem' data-id='<%=el._id%>'>
        <span class='<%= el.completed === true ? 'completed' : 'not'%>'><%= el.todo %></span>
        <span class='del'> Delete </span>
    </li>
<% }) %>    
</ul>

This section displays the todo list. It iterates over the todos array using the forEach loop, and for each todo item (el), it creates a list item (<li>) with a unique ID (data-id='<%=el._id%>'). The todo item's text is displayed within a <span>, and the class of the span is dynamically set based on the completion status of the todo (<%= el.completed === true ? 'completed' : 'not'%>). There is also a delete button represented by <span class='del'> Delete </span>.

ejs

<h2><%= user.userName %> has <%= left %> things left to do.</h2>

This line displays a message indicating the number of todos remaining. It uses the user.userName variable to display the user's name and the left variable to display the number of todos left to do.

ejs

<form action="/todos/createTodo" method='POST'>
    <input type="text" placeholder="Enter Todo Item" name='todoItem'>
    <input type="submit">
</form>

This section displays a form for adding new todos. The form's action attribute is set to /todos/createTodo, and the method is set to POST. The user can enter a new todo item in the text input field (<input type="text" placeholder="Enter Todo Item" name='todoItem'>), and upon submitting the form, the new todo item will be sent to the server for processing.

ejs

<a href="/logout">Logout</a>

This line displays a logout link that redirects the user to the /logout endpoint when clicked.

ejs

<script src="js/main.js"></script>

This line includes a JavaScript file main.js located in the js directory. It allows you to add custom JavaScript logic for handling events or performing actions related to the todo list.

ejs

<%- include('partials/footer') -%>

This line includes the contents of the partials/footer.ejs file.

Overall, this code structure allows you to display a todo list, add new todos, and perform actions such as marking todos as completed or deleting todos.







-->
